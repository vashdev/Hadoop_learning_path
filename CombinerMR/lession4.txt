
combiner 
Using combiners... The only thing to know is
1) we cat use combiners everywhere only to reduce map keys / 
2) As per tom white combiners are only called by framework if the spill to disk happens , So this code is nto guaranteed to run . Any aggregation function should be coded in Reducer as well to make room for this fact.[ofcourse its configurable min.num.spills.for.combine]
3) combiner takes maps output before it goes to reducer, and writes to context and not write to files -output is always context.write(...)

the internel mechanics:
But Combiners are limited to Associative and Commutative functions only, like 'sum' and 'max'. And in order to work, values emitted from the Map task must be serialized, sorted (deserialized and compared), deserialized again and operated on, where again the results are serialized and sorted. Combiners trade CPU for gains in IO
ref:http://docs.cascading.org/cascading/1.2/userguide/html/ch06s09.html

Reference : using the code posted by @bbejeck on GitHub  Or better version vangjee wordpres blog we see how combiner code can be used within the MApper 

1) Just telling mapreduce to use reducer as combiners
2) combiing wordcount for everymap call - collect in map and count all values before emitting 
3) combining wordcount in map and emitting at the end of map do the same in cleanup and use map.clear() after everycall to prevent memory run out
refernce blog:http://codingjunkie.net/text-processing-with-mapreduce-part1/

A Custom combiner is different from the reducer where in this filters data or changes output of mapper and emits the values which are same type as mapper to the reducer this reducer class wil be set in driver as setcombinerClass

job.setCombinerClass(WordCountCombiner.class);
So the most simplistic implementation is to take the output of mapper and do some filtering of data based on key or a value. 

We will do sum and for records > a number say 1 we will output i.e we are collecting output wiht minimum of this many values
and we will pass min value via a commandline  

